// <auto-generated />
using System;
using Ecomm.DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ecomm.DataModel.Migrations
{
    [DbContext(typeof(EcommContext))]
    [Migration("20211129070821_seeddata")]
    partial class seeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ecomm.DataModel.Models.ClientInfo", b =>
                {
                    b.Property<long>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommunicationAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSiteAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("ClientInfos");
                });

            modelBuilder.Entity("Ecomm.DataModel.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Ecomm.DataModel.Models.ProductAttribute", b =>
                {
                    b.Property<long>("ProductAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AttributeId")
                        .HasColumnType("bigint");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductAttributeId");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("Ecomm.DataModel.Models.ProductAttributeLookup", b =>
                {
                    b.Property<long>("AttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.HasKey("AttributeId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("ProductAttributeLookups");

                    b.HasData(
                        new
                        {
                            AttributeId = 1L,
                            AttributeName = "Color",
                            ProductCategoryId = 1L
                        },
                        new
                        {
                            AttributeId = 2L,
                            AttributeName = "Make",
                            ProductCategoryId = 1L
                        },
                        new
                        {
                            AttributeId = 3L,
                            AttributeName = "Model",
                            ProductCategoryId = 1L
                        },
                        new
                        {
                            AttributeId = 4L,
                            AttributeName = "RAM",
                            ProductCategoryId = 2L
                        },
                        new
                        {
                            AttributeId = 5L,
                            AttributeName = "Front Camera",
                            ProductCategoryId = 2L
                        },
                        new
                        {
                            AttributeId = 6L,
                            AttributeName = "Rear Camera",
                            ProductCategoryId = 2L
                        });
                });

            modelBuilder.Entity("Ecomm.DataModel.Models.ProductCategory", b =>
                {
                    b.Property<long>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductCategoryId = 1L,
                            CategoryName = "Car"
                        },
                        new
                        {
                            ProductCategoryId = 2L,
                            CategoryName = "Mobile"
                        });
                });

            modelBuilder.Entity("Ecomm.DataModel.Models.Product", b =>
                {
                    b.HasOne("Ecomm.DataModel.Models.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId");
                });

            modelBuilder.Entity("Ecomm.DataModel.Models.ProductAttribute", b =>
                {
                    b.HasOne("Ecomm.DataModel.Models.ProductAttributeLookup", "ProductAttributeLookup")
                        .WithMany()
                        .HasForeignKey("AttributeId");

                    b.HasOne("Ecomm.DataModel.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Ecomm.DataModel.Models.ProductAttributeLookup", b =>
                {
                    b.HasOne("Ecomm.DataModel.Models.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
